#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FeelOfTravel.SqlDataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FeelOfTravelDb")]
	public partial class DbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttbAboutPage(tbAboutPage instance);
    partial void UpdatetbAboutPage(tbAboutPage instance);
    partial void DeletetbAboutPage(tbAboutPage instance);
    partial void InserttbTeaser(tbTeaser instance);
    partial void UpdatetbTeaser(tbTeaser instance);
    partial void DeletetbTeaser(tbTeaser instance);
    partial void InserttbArticle(tbArticle instance);
    partial void UpdatetbArticle(tbArticle instance);
    partial void DeletetbArticle(tbArticle instance);
    partial void InserttbArticleType(tbArticleType instance);
    partial void UpdatetbArticleType(tbArticleType instance);
    partial void DeletetbArticleType(tbArticleType instance);
    partial void InserttbContactsPage(tbContactsPage instance);
    partial void UpdatetbContactsPage(tbContactsPage instance);
    partial void DeletetbContactsPage(tbContactsPage instance);
    partial void InserttbMainPage(tbMainPage instance);
    partial void UpdatetbMainPage(tbMainPage instance);
    partial void DeletetbMainPage(tbMainPage instance);
    #endregion
		
		public DbDataContext() : 
				base(global::FeelOfTravel.SqlDataAccess.Properties.Settings.Default.FeelOfTravelDbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbAboutPage> tbAboutPages
		{
			get
			{
				return this.GetTable<tbAboutPage>();
			}
		}
		
		public System.Data.Linq.Table<tbTeaser> tbTeasers
		{
			get
			{
				return this.GetTable<tbTeaser>();
			}
		}
		
		public System.Data.Linq.Table<tbArticle> tbArticles
		{
			get
			{
				return this.GetTable<tbArticle>();
			}
		}
		
		public System.Data.Linq.Table<tbArticleType> tbArticleTypes
		{
			get
			{
				return this.GetTable<tbArticleType>();
			}
		}
		
		public System.Data.Linq.Table<tbContactsPage> tbContactsPages
		{
			get
			{
				return this.GetTable<tbContactsPage>();
			}
		}
		
		public System.Data.Linq.Table<tbMainPage> tbMainPages
		{
			get
			{
				return this.GetTable<tbMainPage>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbAboutPage")]
	public partial class tbAboutPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _entryId;
		
		private string _text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnentryIdChanging(int value);
    partial void OnentryIdChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    #endregion
		
		public tbAboutPage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int entryId
		{
			get
			{
				return this._entryId;
			}
			set
			{
				if ((this._entryId != value))
				{
					this.OnentryIdChanging(value);
					this.SendPropertyChanging();
					this._entryId = value;
					this.SendPropertyChanged("entryId");
					this.OnentryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbTeasers")]
	public partial class tbTeaser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _teaserId;
		
		private string _preamble;
		
		private string _imageLink;
		
		private int _relatedArticleId;
		
		private EntityRef<tbArticle> _tbArticle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnteaserIdChanging(int value);
    partial void OnteaserIdChanged();
    partial void OnpreambleChanging(string value);
    partial void OnpreambleChanged();
    partial void OnimageLinkChanging(string value);
    partial void OnimageLinkChanged();
    partial void OnrelatedArticleIdChanging(int value);
    partial void OnrelatedArticleIdChanged();
    #endregion
		
		public tbTeaser()
		{
			this._tbArticle = default(EntityRef<tbArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teaserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int teaserId
		{
			get
			{
				return this._teaserId;
			}
			set
			{
				if ((this._teaserId != value))
				{
					this.OnteaserIdChanging(value);
					this.SendPropertyChanging();
					this._teaserId = value;
					this.SendPropertyChanged("teaserId");
					this.OnteaserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preamble", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string preamble
		{
			get
			{
				return this._preamble;
			}
			set
			{
				if ((this._preamble != value))
				{
					this.OnpreambleChanging(value);
					this.SendPropertyChanging();
					this._preamble = value;
					this.SendPropertyChanged("preamble");
					this.OnpreambleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageLink", DbType="VarChar(100)")]
		public string imageLink
		{
			get
			{
				return this._imageLink;
			}
			set
			{
				if ((this._imageLink != value))
				{
					this.OnimageLinkChanging(value);
					this.SendPropertyChanging();
					this._imageLink = value;
					this.SendPropertyChanged("imageLink");
					this.OnimageLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relatedArticleId", DbType="Int NOT NULL")]
		public int relatedArticleId
		{
			get
			{
				return this._relatedArticleId;
			}
			set
			{
				if ((this._relatedArticleId != value))
				{
					if (this._tbArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrelatedArticleIdChanging(value);
					this.SendPropertyChanging();
					this._relatedArticleId = value;
					this.SendPropertyChanged("relatedArticleId");
					this.OnrelatedArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbArticle_tbTeaser", Storage="_tbArticle", ThisKey="relatedArticleId", OtherKey="articleId", IsForeignKey=true)]
		public tbArticle tbArticle
		{
			get
			{
				return this._tbArticle.Entity;
			}
			set
			{
				tbArticle previousValue = this._tbArticle.Entity;
				if (((previousValue != value) 
							|| (this._tbArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbArticle.Entity = null;
						previousValue.tbTeasers.Remove(this);
					}
					this._tbArticle.Entity = value;
					if ((value != null))
					{
						value.tbTeasers.Add(this);
						this._relatedArticleId = value.articleId;
					}
					else
					{
						this._relatedArticleId = default(int);
					}
					this.SendPropertyChanged("tbArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbArticles")]
	public partial class tbArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _articleId;
		
		private int _articleTypeId;
		
		private string _header;
		
		private string _text;
		
		private System.Nullable<double> _price;
		
		private EntitySet<tbTeaser> _tbTeasers;
		
		private EntityRef<tbArticleType> _tbArticleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnarticleIdChanging(int value);
    partial void OnarticleIdChanged();
    partial void OnarticleTypeIdChanging(int value);
    partial void OnarticleTypeIdChanged();
    partial void OnheaderChanging(string value);
    partial void OnheaderChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    #endregion
		
		public tbArticle()
		{
			this._tbTeasers = new EntitySet<tbTeaser>(new Action<tbTeaser>(this.attach_tbTeasers), new Action<tbTeaser>(this.detach_tbTeasers));
			this._tbArticleType = default(EntityRef<tbArticleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_articleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int articleId
		{
			get
			{
				return this._articleId;
			}
			set
			{
				if ((this._articleId != value))
				{
					this.OnarticleIdChanging(value);
					this.SendPropertyChanging();
					this._articleId = value;
					this.SendPropertyChanged("articleId");
					this.OnarticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_articleTypeId", DbType="Int NOT NULL")]
		public int articleTypeId
		{
			get
			{
				return this._articleTypeId;
			}
			set
			{
				if ((this._articleTypeId != value))
				{
					if (this._tbArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnarticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._articleTypeId = value;
					this.SendPropertyChanged("articleTypeId");
					this.OnarticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_header", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string header
		{
			get
			{
				return this._header;
			}
			set
			{
				if ((this._header != value))
				{
					this.OnheaderChanging(value);
					this.SendPropertyChanging();
					this._header = value;
					this.SendPropertyChanged("header");
					this.OnheaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbArticle_tbTeaser", Storage="_tbTeasers", ThisKey="articleId", OtherKey="relatedArticleId")]
		public EntitySet<tbTeaser> tbTeasers
		{
			get
			{
				return this._tbTeasers;
			}
			set
			{
				this._tbTeasers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbArticleType_tbArticle", Storage="_tbArticleType", ThisKey="articleTypeId", OtherKey="articleTypeId", IsForeignKey=true)]
		public tbArticleType tbArticleType
		{
			get
			{
				return this._tbArticleType.Entity;
			}
			set
			{
				tbArticleType previousValue = this._tbArticleType.Entity;
				if (((previousValue != value) 
							|| (this._tbArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbArticleType.Entity = null;
						previousValue.tbArticles.Remove(this);
					}
					this._tbArticleType.Entity = value;
					if ((value != null))
					{
						value.tbArticles.Add(this);
						this._articleTypeId = value.articleTypeId;
					}
					else
					{
						this._articleTypeId = default(int);
					}
					this.SendPropertyChanged("tbArticleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbTeasers(tbTeaser entity)
		{
			this.SendPropertyChanging();
			entity.tbArticle = this;
		}
		
		private void detach_tbTeasers(tbTeaser entity)
		{
			this.SendPropertyChanging();
			entity.tbArticle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbArticleTypes")]
	public partial class tbArticleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _articleTypeId;
		
		private string _articleType;
		
		private EntitySet<tbArticle> _tbArticles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnarticleTypeIdChanging(int value);
    partial void OnarticleTypeIdChanged();
    partial void OnarticleTypeChanging(string value);
    partial void OnarticleTypeChanged();
    #endregion
		
		public tbArticleType()
		{
			this._tbArticles = new EntitySet<tbArticle>(new Action<tbArticle>(this.attach_tbArticles), new Action<tbArticle>(this.detach_tbArticles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_articleTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int articleTypeId
		{
			get
			{
				return this._articleTypeId;
			}
			set
			{
				if ((this._articleTypeId != value))
				{
					this.OnarticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._articleTypeId = value;
					this.SendPropertyChanged("articleTypeId");
					this.OnarticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_articleType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string articleType
		{
			get
			{
				return this._articleType;
			}
			set
			{
				if ((this._articleType != value))
				{
					this.OnarticleTypeChanging(value);
					this.SendPropertyChanging();
					this._articleType = value;
					this.SendPropertyChanged("articleType");
					this.OnarticleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbArticleType_tbArticle", Storage="_tbArticles", ThisKey="articleTypeId", OtherKey="articleTypeId")]
		public EntitySet<tbArticle> tbArticles
		{
			get
			{
				return this._tbArticles;
			}
			set
			{
				this._tbArticles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbArticles(tbArticle entity)
		{
			this.SendPropertyChanging();
			entity.tbArticleType = this;
		}
		
		private void detach_tbArticles(tbArticle entity)
		{
			this.SendPropertyChanging();
			entity.tbArticleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbContactsPage")]
	public partial class tbContactsPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _entryId;
		
		private string _text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnentryIdChanging(int value);
    partial void OnentryIdChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    #endregion
		
		public tbContactsPage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int entryId
		{
			get
			{
				return this._entryId;
			}
			set
			{
				if ((this._entryId != value))
				{
					this.OnentryIdChanging(value);
					this.SendPropertyChanging();
					this._entryId = value;
					this.SendPropertyChanged("entryId");
					this.OnentryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbMainPage")]
	public partial class tbMainPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _entryId;
		
		private string _text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnentryIdChanging(int value);
    partial void OnentryIdChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    #endregion
		
		public tbMainPage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int entryId
		{
			get
			{
				return this._entryId;
			}
			set
			{
				if ((this._entryId != value))
				{
					this.OnentryIdChanging(value);
					this.SendPropertyChanging();
					this._entryId = value;
					this.SendPropertyChanged("entryId");
					this.OnentryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
